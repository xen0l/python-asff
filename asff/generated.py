#
# !!! DO NOT EDIT THIS FILE, IT IS GENERATED !!!
#
# For more information, see tools/generate_class.py.
#
# pylint: skip-file
import re
from typing import List, Dict, Optional

import pydantic
from pydantic import constr


# Some ASFF classes have inconsistent naming, e.g. 'SseType' or 'SSEAlgorithm'.
# This dict collects such exception.
_ALIAS_NORMALIZER = {
    "sse_algorithm": "SSEAlgorithm",
    "kms_master_key_id": "KMSMasterKeyID",
}


class ASFFBaseModel(pydantic.BaseModel):
    class Config:
        validate_assignment = True
        allow_population_by_field_name = True
        alias_generator = lambda x: _ALIAS_NORMALIZER.get(
            x, re.sub(r"(?:^|_)(.)", lambda m: m.group(1).upper(), x)
        )


NonEmptyString = constr(regex=".*\S.*")
TypeList = List[NonEmptyString]
Double = int
SeverityLabel = constr(regex="^(INFORMATIONAL|LOW|MEDIUM|HIGH|CRITICAL)$")
Integer = int


class Severity(ASFFBaseModel):
    product: Optional[Double]
    label: Optional[SeverityLabel]
    normalized: Optional[Integer]
    original: Optional[NonEmptyString]


class Recommendation(ASFFBaseModel):
    text: Optional[NonEmptyString]
    url: Optional[NonEmptyString]


class Remediation(ASFFBaseModel):
    recommendation: Optional[Recommendation]


MalwareType = constr(
    regex="^(ADWARE|BLENDED_THREAT|BOTNET_AGENT|COIN_MINER|EXPLOIT_KIT|KEYLOGGER|MACRO|POTENTIALLY_UNWANTED|SPYWARE|RANSOMWARE|REMOTE_ACCESS|ROOTKIT|TROJAN|VIRUS|WORM)$"
)
MalwareState = constr(regex="^(OBSERVED|REMOVAL_FAILED|REMOVED)$")


class Malware(ASFFBaseModel):
    name: NonEmptyString
    type: Optional[MalwareType]
    path: Optional[NonEmptyString]
    state: Optional[MalwareState]


MalwareList = List[Malware]
NetworkDirection = constr(regex="^(IN|OUT)$")


class PortRange(ASFFBaseModel):
    begin: Optional[Integer]
    end: Optional[Integer]


class Network(ASFFBaseModel):
    direction: Optional[NetworkDirection]
    protocol: Optional[NonEmptyString]
    open_port_range: Optional[PortRange]
    source_ip_v4: Optional[NonEmptyString]
    source_ip_v6: Optional[NonEmptyString]
    source_port: Optional[Integer]
    source_domain: Optional[NonEmptyString]
    source_mac: Optional[NonEmptyString]
    destination_ip_v4: Optional[NonEmptyString]
    destination_ip_v6: Optional[NonEmptyString]
    destination_port: Optional[Integer]
    destination_domain: Optional[NonEmptyString]


StringList = List[NonEmptyString]
PortRangeList = List[PortRange]


class NetworkPathComponentDetails(ASFFBaseModel):
    address: Optional[StringList]
    port_ranges: Optional[PortRangeList]


class NetworkHeader(ASFFBaseModel):
    protocol: Optional[NonEmptyString]
    destination: Optional[NetworkPathComponentDetails]
    source: Optional[NetworkPathComponentDetails]


class NetworkPathComponent(ASFFBaseModel):
    component_id: Optional[NonEmptyString]
    component_type: Optional[NonEmptyString]
    egress: Optional[NetworkHeader]
    ingress: Optional[NetworkHeader]


NetworkPathList = List[NetworkPathComponent]


class ProcessDetails(ASFFBaseModel):
    name: Optional[NonEmptyString]
    path: Optional[NonEmptyString]
    pid: Optional[Integer]
    parent_pid: Optional[Integer]
    launched_at: Optional[NonEmptyString]
    terminated_at: Optional[NonEmptyString]


ThreatIntelIndicatorType = constr(
    regex="^(DOMAIN|EMAIL_ADDRESS|HASH_MD5|HASH_SHA1|HASH_SHA256|HASH_SHA512|IPV4_ADDRESS|IPV6_ADDRESS|MUTEX|PROCESS|URL)$"
)
ThreatIntelIndicatorCategory = constr(
    regex="^(BACKDOOR|CARD_STEALER|COMMAND_AND_CONTROL|DROP_SITE|EXPLOIT_SITE|KEYLOGGER)$"
)


class ThreatIntelIndicator(ASFFBaseModel):
    type: Optional[ThreatIntelIndicatorType]
    value: Optional[NonEmptyString]
    category: Optional[ThreatIntelIndicatorCategory]
    last_observed_at: Optional[NonEmptyString]
    source: Optional[NonEmptyString]
    source_url: Optional[NonEmptyString]


ThreatIntelIndicatorList = List[ThreatIntelIndicator]
Partition = constr(regex="^(aws|aws-cn|aws-us-gov)$")


class AwsAutoScalingAutoScalingGroupDetails(ASFFBaseModel):
    launch_configuration_name: Optional[NonEmptyString]
    load_balancer_names: Optional[StringList]
    health_check_type: Optional[NonEmptyString]
    health_check_grace_period: Optional[Integer]
    created_time: Optional[NonEmptyString]


class AwsCodeBuildProjectEnvironmentRegistryCredential(ASFFBaseModel):
    credential: Optional[NonEmptyString]
    credential_provider: Optional[NonEmptyString]


class AwsCodeBuildProjectEnvironment(ASFFBaseModel):
    certificate: Optional[NonEmptyString]
    image_pull_credentials_type: Optional[NonEmptyString]
    registry_credential: Optional[AwsCodeBuildProjectEnvironmentRegistryCredential]
    type: Optional[NonEmptyString]


Boolean = bool


class AwsCodeBuildProjectSource(ASFFBaseModel):
    type: Optional[NonEmptyString]
    location: Optional[NonEmptyString]
    git_clone_depth: Optional[Integer]
    insecure_ssl: Optional[Boolean]


NonEmptyStringList = List[NonEmptyString]


class AwsCodeBuildProjectVpcConfig(ASFFBaseModel):
    vpc_id: Optional[NonEmptyString]
    subnets: Optional[NonEmptyStringList]
    security_group_ids: Optional[NonEmptyStringList]


class AwsCodeBuildProjectDetails(ASFFBaseModel):
    encryption_key: Optional[NonEmptyString]
    environment: Optional[AwsCodeBuildProjectEnvironment]
    name: Optional[NonEmptyString]
    source: Optional[AwsCodeBuildProjectSource]
    service_role: Optional[NonEmptyString]
    vpc_config: Optional[AwsCodeBuildProjectVpcConfig]


class AwsCloudFrontDistributionLogging(ASFFBaseModel):
    bucket: Optional[NonEmptyString]
    enabled: Optional[Boolean]
    include_cookies: Optional[Boolean]
    prefix: Optional[NonEmptyString]


class AwsCloudFrontDistributionOriginItem(ASFFBaseModel):
    domain_name: Optional[NonEmptyString]
    id: Optional[NonEmptyString]
    origin_path: Optional[NonEmptyString]


AwsCloudFrontDistributionOriginItemList = List[AwsCloudFrontDistributionOriginItem]


class AwsCloudFrontDistributionOrigins(ASFFBaseModel):
    items: Optional[AwsCloudFrontDistributionOriginItemList]


class AwsCloudFrontDistributionDetails(ASFFBaseModel):
    domain_name: Optional[NonEmptyString]
    e_tag: Optional[NonEmptyString]
    last_modified_time: Optional[NonEmptyString]
    logging: Optional[AwsCloudFrontDistributionLogging]
    origins: Optional[AwsCloudFrontDistributionOrigins]
    status: Optional[NonEmptyString]
    web_acl_id: Optional[NonEmptyString]


class AwsEc2InstanceDetails(ASFFBaseModel):
    type: Optional[NonEmptyString]
    image_id: Optional[NonEmptyString]
    ip_v4_addresses: Optional[StringList]
    ip_v6_addresses: Optional[StringList]
    key_name: Optional[NonEmptyString]
    iam_instance_profile_arn: Optional[NonEmptyString]
    vpc_id: Optional[NonEmptyString]
    subnet_id: Optional[NonEmptyString]
    launched_at: Optional[NonEmptyString]


class AwsEc2NetworkInterfaceAttachment(ASFFBaseModel):
    attach_time: Optional[NonEmptyString]
    attachment_id: Optional[NonEmptyString]
    delete_on_termination: Optional[Boolean]
    device_index: Optional[Integer]
    instance_id: Optional[NonEmptyString]
    instance_owner_id: Optional[NonEmptyString]
    status: Optional[NonEmptyString]


class AwsEc2NetworkInterfaceSecurityGroup(ASFFBaseModel):
    group_name: Optional[NonEmptyString]
    group_id: Optional[NonEmptyString]


AwsEc2NetworkInterfaceSecurityGroupList = List[AwsEc2NetworkInterfaceSecurityGroup]


class AwsEc2NetworkInterfaceDetails(ASFFBaseModel):
    attachment: Optional[AwsEc2NetworkInterfaceAttachment]
    network_interface_id: Optional[NonEmptyString]
    security_groups: Optional[AwsEc2NetworkInterfaceSecurityGroupList]
    source_dest_check: Optional[Boolean]


class AwsEc2SecurityGroupUserIdGroupPair(ASFFBaseModel):
    group_id: Optional[NonEmptyString]
    group_name: Optional[NonEmptyString]
    peering_status: Optional[NonEmptyString]
    user_id: Optional[NonEmptyString]
    vpc_id: Optional[NonEmptyString]
    vpc_peering_connection_id: Optional[NonEmptyString]


AwsEc2SecurityGroupUserIdGroupPairList = List[AwsEc2SecurityGroupUserIdGroupPair]


class AwsEc2SecurityGroupIpRange(ASFFBaseModel):
    cidr_ip: Optional[NonEmptyString]


AwsEc2SecurityGroupIpRangeList = List[AwsEc2SecurityGroupIpRange]


class AwsEc2SecurityGroupIpv6Range(ASFFBaseModel):
    cidr_ipv6: Optional[NonEmptyString]


AwsEc2SecurityGroupIpv6RangeList = List[AwsEc2SecurityGroupIpv6Range]


class AwsEc2SecurityGroupPrefixListId(ASFFBaseModel):
    prefix_list_id: Optional[NonEmptyString]


AwsEc2SecurityGroupPrefixListIdList = List[AwsEc2SecurityGroupPrefixListId]


class AwsEc2SecurityGroupIpPermission(ASFFBaseModel):
    ip_protocol: Optional[NonEmptyString]
    from_port: Optional[Integer]
    to_port: Optional[Integer]
    user_id_group_pairs: Optional[AwsEc2SecurityGroupUserIdGroupPairList]
    ip_ranges: Optional[AwsEc2SecurityGroupIpRangeList]
    ipv6_ranges: Optional[AwsEc2SecurityGroupIpv6RangeList]
    prefix_list_ids: Optional[AwsEc2SecurityGroupPrefixListIdList]


AwsEc2SecurityGroupIpPermissionList = List[AwsEc2SecurityGroupIpPermission]


class AwsEc2SecurityGroupDetails(ASFFBaseModel):
    group_name: Optional[NonEmptyString]
    group_id: Optional[NonEmptyString]
    owner_id: Optional[NonEmptyString]
    vpc_id: Optional[NonEmptyString]
    ip_permissions: Optional[AwsEc2SecurityGroupIpPermissionList]
    ip_permissions_egress: Optional[AwsEc2SecurityGroupIpPermissionList]


class AwsEc2VolumeAttachment(ASFFBaseModel):
    attach_time: Optional[NonEmptyString]
    delete_on_termination: Optional[Boolean]
    instance_id: Optional[NonEmptyString]
    status: Optional[NonEmptyString]


AwsEc2VolumeAttachmentList = List[AwsEc2VolumeAttachment]


class AwsEc2VolumeDetails(ASFFBaseModel):
    create_time: Optional[NonEmptyString]
    encrypted: Optional[Boolean]
    size: Optional[Integer]
    snapshot_id: Optional[NonEmptyString]
    status: Optional[NonEmptyString]
    kms_key_id: Optional[NonEmptyString]
    attachments: Optional[AwsEc2VolumeAttachmentList]


class CidrBlockAssociation(ASFFBaseModel):
    association_id: Optional[NonEmptyString]
    cidr_block: Optional[NonEmptyString]
    cidr_block_state: Optional[NonEmptyString]


CidrBlockAssociationList = List[CidrBlockAssociation]


class Ipv6CidrBlockAssociation(ASFFBaseModel):
    association_id: Optional[NonEmptyString]
    ipv6_cidr_block: Optional[NonEmptyString]
    cidr_block_state: Optional[NonEmptyString]


Ipv6CidrBlockAssociationList = List[Ipv6CidrBlockAssociation]


class AwsEc2VpcDetails(ASFFBaseModel):
    cidr_block_association_set: Optional[CidrBlockAssociationList]
    ipv6_cidr_block_association_set: Optional[Ipv6CidrBlockAssociationList]
    dhcp_options_id: Optional[NonEmptyString]
    state: Optional[NonEmptyString]


class AwsEc2EipDetails(ASFFBaseModel):
    instance_id: Optional[NonEmptyString]
    public_ip: Optional[NonEmptyString]
    allocation_id: Optional[NonEmptyString]
    association_id: Optional[NonEmptyString]
    domain: Optional[NonEmptyString]
    public_ipv4_pool: Optional[NonEmptyString]
    network_border_group: Optional[NonEmptyString]
    network_interface_id: Optional[NonEmptyString]
    network_interface_owner_id: Optional[NonEmptyString]
    private_ip_address: Optional[NonEmptyString]


class AvailabilityZone(ASFFBaseModel):
    zone_name: Optional[NonEmptyString]
    subnet_id: Optional[NonEmptyString]


AvailabilityZones = List[AvailabilityZone]
SecurityGroups = List[NonEmptyString]


class LoadBalancerState(ASFFBaseModel):
    code: Optional[NonEmptyString]
    reason: Optional[NonEmptyString]


class AwsElbv2LoadBalancerDetails(ASFFBaseModel):
    availability_zones: Optional[AvailabilityZones]
    canonical_hosted_zone_id: Optional[NonEmptyString]
    created_time: Optional[NonEmptyString]
    dns_name: Optional[NonEmptyString]
    ip_address_type: Optional[NonEmptyString]
    scheme: Optional[NonEmptyString]
    security_groups: Optional[SecurityGroups]
    state: Optional[LoadBalancerState]
    type: Optional[NonEmptyString]
    vpc_id: Optional[NonEmptyString]


class AwsElasticsearchDomainDomainEndpointOptions(ASFFBaseModel):
    enforce_https: Optional[Boolean]
    tls_security_policy: Optional[NonEmptyString]


FieldMap = Dict[NonEmptyString, NonEmptyString]


class AwsElasticsearchDomainEncryptionAtRestOptions(ASFFBaseModel):
    enabled: Optional[Boolean]
    kms_key_id: Optional[NonEmptyString]


class AwsElasticsearchDomainNodeToNodeEncryptionOptions(ASFFBaseModel):
    enabled: Optional[Boolean]


class AwsElasticsearchDomainVPCOptions(ASFFBaseModel):
    availability_zones: Optional[NonEmptyStringList]
    security_group_ids: Optional[NonEmptyStringList]
    subnet_ids: Optional[NonEmptyStringList]
    vpc_id: Optional[NonEmptyString]


class AwsElasticsearchDomainDetails(ASFFBaseModel):
    access_policies: Optional[NonEmptyString]
    domain_endpoint_options: Optional[AwsElasticsearchDomainDomainEndpointOptions]
    domain_id: Optional[NonEmptyString]
    domain_name: Optional[NonEmptyString]
    endpoint: Optional[NonEmptyString]
    endpoints: Optional[FieldMap]
    elasticsearch_version: Optional[NonEmptyString]
    encryption_at_rest_options: Optional[AwsElasticsearchDomainEncryptionAtRestOptions]
    node_to_node_encryption_options: Optional[
        AwsElasticsearchDomainNodeToNodeEncryptionOptions
    ]
    vpc_options: Optional[AwsElasticsearchDomainVPCOptions]


class AwsS3BucketServerSideEncryptionByDefault(ASFFBaseModel):
    sse_algorithm: Optional[NonEmptyString]
    kms_master_key_id: Optional[NonEmptyString]


class AwsS3BucketServerSideEncryptionRule(ASFFBaseModel):
    apply_server_side_encryption_by_default: Optional[
        AwsS3BucketServerSideEncryptionByDefault
    ]


AwsS3BucketServerSideEncryptionRules = List[AwsS3BucketServerSideEncryptionRule]


class AwsS3BucketServerSideEncryptionConfiguration(ASFFBaseModel):
    rules: Optional[AwsS3BucketServerSideEncryptionRules]


class AwsS3BucketDetails(ASFFBaseModel):
    owner_id: Optional[NonEmptyString]
    owner_name: Optional[NonEmptyString]
    created_at: Optional[NonEmptyString]
    server_side_encryption_configuration: Optional[
        AwsS3BucketServerSideEncryptionConfiguration
    ]


class AwsS3ObjectDetails(ASFFBaseModel):
    last_modified: Optional[NonEmptyString]
    e_tag: Optional[NonEmptyString]
    version_id: Optional[NonEmptyString]
    content_type: Optional[NonEmptyString]
    server_side_encryption: Optional[NonEmptyString]
    ssekms_key_id: Optional[NonEmptyString]


class AwsSecretsManagerSecretRotationRules(ASFFBaseModel):
    automatically_after_days: Optional[Integer]


class AwsSecretsManagerSecretDetails(ASFFBaseModel):
    rotation_rules: Optional[AwsSecretsManagerSecretRotationRules]
    rotation_occurred_within_frequency: Optional[Boolean]
    kms_key_id: Optional[NonEmptyString]
    rotation_enabled: Optional[Boolean]
    rotation_lambda_arn: Optional[NonEmptyString]
    deleted: Optional[Boolean]
    name: Optional[NonEmptyString]
    description: Optional[NonEmptyString]


AwsIamAccessKeyStatus = constr(regex="^(Active|Inactive)$")


class AwsIamAccessKeyDetails(ASFFBaseModel):
    user_name: Optional[NonEmptyString]
    status: Optional[AwsIamAccessKeyStatus]
    created_at: Optional[NonEmptyString]
    principal_id: Optional[NonEmptyString]
    principal_type: Optional[NonEmptyString]
    principal_name: Optional[NonEmptyString]


class AwsIamAttachedManagedPolicy(ASFFBaseModel):
    policy_name: Optional[NonEmptyString]
    policy_arn: Optional[NonEmptyString]


AwsIamAttachedManagedPolicyList = List[AwsIamAttachedManagedPolicy]


class AwsIamPermissionsBoundary(ASFFBaseModel):
    permissions_boundary_arn: Optional[NonEmptyString]
    permissions_boundary_type: Optional[NonEmptyString]


class AwsIamUserPolicy(ASFFBaseModel):
    policy_name: Optional[NonEmptyString]


AwsIamUserPolicyList = List[AwsIamUserPolicy]


class AwsIamUserDetails(ASFFBaseModel):
    attached_managed_policies: Optional[AwsIamAttachedManagedPolicyList]
    create_date: Optional[NonEmptyString]
    group_list: Optional[StringList]
    path: Optional[NonEmptyString]
    permissions_boundary: Optional[AwsIamPermissionsBoundary]
    user_id: Optional[NonEmptyString]
    user_name: Optional[NonEmptyString]
    user_policy_list: Optional[AwsIamUserPolicyList]


class AwsIamPolicyVersion(ASFFBaseModel):
    version_id: Optional[NonEmptyString]
    is_default_version: Optional[Boolean]
    create_date: Optional[NonEmptyString]


AwsIamPolicyVersionList = List[AwsIamPolicyVersion]


class AwsIamPolicyDetails(ASFFBaseModel):
    attachment_count: Optional[Integer]
    create_date: Optional[NonEmptyString]
    default_version_id: Optional[NonEmptyString]
    description: Optional[NonEmptyString]
    is_attachable: Optional[Boolean]
    path: Optional[NonEmptyString]
    permissions_boundary_usage_count: Optional[Integer]
    policy_id: Optional[NonEmptyString]
    policy_name: Optional[NonEmptyString]
    policy_version_list: Optional[AwsIamPolicyVersionList]
    update_date: Optional[NonEmptyString]


class AwsDynamoDbTableAttributeDefinition(ASFFBaseModel):
    attribute_name: Optional[NonEmptyString]
    attribute_type: Optional[NonEmptyString]


AwsDynamoDbTableAttributeDefinitionList = List[AwsDynamoDbTableAttributeDefinition]


class AwsDynamoDbTableBillingModeSummary(ASFFBaseModel):
    billing_mode: Optional[NonEmptyString]
    last_update_to_pay_per_request_date_time: Optional[NonEmptyString]


SizeBytes = int


class AwsDynamoDbTableKeySchema(ASFFBaseModel):
    attribute_name: Optional[NonEmptyString]
    key_type: Optional[NonEmptyString]


AwsDynamoDbTableKeySchemaList = List[AwsDynamoDbTableKeySchema]


class AwsDynamoDbTableProjection(ASFFBaseModel):
    non_key_attributes: Optional[StringList]
    projection_type: Optional[NonEmptyString]


class AwsDynamoDbTableProvisionedThroughput(ASFFBaseModel):
    last_decrease_date_time: Optional[NonEmptyString]
    last_increase_date_time: Optional[NonEmptyString]
    number_of_decreases_today: Optional[Integer]
    read_capacity_units: Optional[Integer]
    write_capacity_units: Optional[Integer]


class AwsDynamoDbTableGlobalSecondaryIndex(ASFFBaseModel):
    backfilling: Optional[Boolean]
    index_arn: Optional[NonEmptyString]
    index_name: Optional[NonEmptyString]
    index_size_bytes: Optional[SizeBytes]
    index_status: Optional[NonEmptyString]
    item_count: Optional[Integer]
    key_schema: Optional[AwsDynamoDbTableKeySchemaList]
    projection: Optional[AwsDynamoDbTableProjection]
    provisioned_throughput: Optional[AwsDynamoDbTableProvisionedThroughput]


AwsDynamoDbTableGlobalSecondaryIndexList = List[AwsDynamoDbTableGlobalSecondaryIndex]


class AwsDynamoDbTableLocalSecondaryIndex(ASFFBaseModel):
    index_arn: Optional[NonEmptyString]
    index_name: Optional[NonEmptyString]
    key_schema: Optional[AwsDynamoDbTableKeySchemaList]
    projection: Optional[AwsDynamoDbTableProjection]


AwsDynamoDbTableLocalSecondaryIndexList = List[AwsDynamoDbTableLocalSecondaryIndex]


class AwsDynamoDbTableProvisionedThroughputOverride(ASFFBaseModel):
    read_capacity_units: Optional[Integer]


class AwsDynamoDbTableReplicaGlobalSecondaryIndex(ASFFBaseModel):
    index_name: Optional[NonEmptyString]
    provisioned_throughput_override: Optional[
        AwsDynamoDbTableProvisionedThroughputOverride
    ]


AwsDynamoDbTableReplicaGlobalSecondaryIndexList = List[
    AwsDynamoDbTableReplicaGlobalSecondaryIndex
]


class AwsDynamoDbTableReplica(ASFFBaseModel):
    global_secondary_indexes: Optional[AwsDynamoDbTableReplicaGlobalSecondaryIndexList]
    kms_master_key_id: Optional[NonEmptyString]
    provisioned_throughput_override: Optional[
        AwsDynamoDbTableProvisionedThroughputOverride
    ]
    region_name: Optional[NonEmptyString]
    replica_status: Optional[NonEmptyString]
    replica_status_description: Optional[NonEmptyString]


AwsDynamoDbTableReplicaList = List[AwsDynamoDbTableReplica]


class AwsDynamoDbTableRestoreSummary(ASFFBaseModel):
    source_backup_arn: Optional[NonEmptyString]
    source_table_arn: Optional[NonEmptyString]
    restore_date_time: Optional[NonEmptyString]
    restore_in_progress: Optional[Boolean]


class AwsDynamoDbTableSseDescription(ASFFBaseModel):
    inaccessible_encryption_date_time: Optional[NonEmptyString]
    status: Optional[NonEmptyString]
    sse_type: Optional[NonEmptyString]
    kms_master_key_arn: Optional[NonEmptyString]


class AwsDynamoDbTableStreamSpecification(ASFFBaseModel):
    stream_enabled: Optional[Boolean]
    stream_view_type: Optional[NonEmptyString]


class AwsDynamoDbTableDetails(ASFFBaseModel):
    attribute_definitions: Optional[AwsDynamoDbTableAttributeDefinitionList]
    billing_mode_summary: Optional[AwsDynamoDbTableBillingModeSummary]
    creation_date_time: Optional[NonEmptyString]
    global_secondary_indexes: Optional[AwsDynamoDbTableGlobalSecondaryIndexList]
    global_table_version: Optional[NonEmptyString]
    item_count: Optional[Integer]
    key_schema: Optional[AwsDynamoDbTableKeySchemaList]
    latest_stream_arn: Optional[NonEmptyString]
    latest_stream_label: Optional[NonEmptyString]
    local_secondary_indexes: Optional[AwsDynamoDbTableLocalSecondaryIndexList]
    provisioned_throughput: Optional[AwsDynamoDbTableProvisionedThroughput]
    replicas: Optional[AwsDynamoDbTableReplicaList]
    restore_summary: Optional[AwsDynamoDbTableRestoreSummary]
    sse_description: Optional[AwsDynamoDbTableSseDescription]
    stream_specification: Optional[AwsDynamoDbTableStreamSpecification]
    table_id: Optional[NonEmptyString]
    table_name: Optional[NonEmptyString]
    table_size_bytes: Optional[SizeBytes]
    table_status: Optional[NonEmptyString]


AwsIamRoleAssumeRolePolicyDocument = constr(
    regex="[\u0009\u000A\u000D\u0020-\u007E\u00A1-\u00FF]+",
    min_length=1,
    max_length=131072,
)


class AwsIamRoleDetails(ASFFBaseModel):
    assume_role_policy_document: Optional[AwsIamRoleAssumeRolePolicyDocument]
    create_date: Optional[NonEmptyString]
    role_id: Optional[NonEmptyString]
    role_name: Optional[NonEmptyString]
    max_session_duration: Optional[Integer]
    path: Optional[NonEmptyString]


class AwsKmsKeyDetails(ASFFBaseModel):
    aws_account_id: Optional[NonEmptyString]
    creation_date: Optional[Double]
    key_id: Optional[NonEmptyString]
    key_manager: Optional[NonEmptyString]
    key_state: Optional[NonEmptyString]
    origin: Optional[NonEmptyString]
    description: Optional[NonEmptyString]


class AwsLambdaFunctionCode(ASFFBaseModel):
    s3_bucket: Optional[NonEmptyString]
    s3_key: Optional[NonEmptyString]
    s3_object_version: Optional[NonEmptyString]
    zip_file: Optional[NonEmptyString]


class AwsLambdaFunctionDeadLetterConfig(ASFFBaseModel):
    target_arn: Optional[NonEmptyString]


class AwsLambdaFunctionEnvironmentError(ASFFBaseModel):
    error_code: Optional[NonEmptyString]
    message: Optional[NonEmptyString]


class AwsLambdaFunctionEnvironment(ASFFBaseModel):
    variables: Optional[FieldMap]
    error: Optional[AwsLambdaFunctionEnvironmentError]


class AwsLambdaFunctionLayer(ASFFBaseModel):
    arn: Optional[NonEmptyString]
    code_size: Optional[Integer]


AwsLambdaFunctionLayerList = List[AwsLambdaFunctionLayer]


class AwsLambdaFunctionTracingConfig(ASFFBaseModel):
    mode: Optional[NonEmptyString]


class AwsLambdaFunctionVpcConfig(ASFFBaseModel):
    security_group_ids: Optional[NonEmptyStringList]
    subnet_ids: Optional[NonEmptyStringList]
    vpc_id: Optional[NonEmptyString]


class AwsLambdaFunctionDetails(ASFFBaseModel):
    code: Optional[AwsLambdaFunctionCode]
    code_sha256: Optional[NonEmptyString]
    dead_letter_config: Optional[AwsLambdaFunctionDeadLetterConfig]
    environment: Optional[AwsLambdaFunctionEnvironment]
    function_name: Optional[NonEmptyString]
    handler: Optional[NonEmptyString]
    kms_key_arn: Optional[NonEmptyString]
    last_modified: Optional[NonEmptyString]
    layers: Optional[AwsLambdaFunctionLayerList]
    master_arn: Optional[NonEmptyString]
    memory_size: Optional[Integer]
    revision_id: Optional[NonEmptyString]
    role: Optional[NonEmptyString]
    runtime: Optional[NonEmptyString]
    timeout: Optional[Integer]
    tracing_config: Optional[AwsLambdaFunctionTracingConfig]
    vpc_config: Optional[AwsLambdaFunctionVpcConfig]
    version: Optional[NonEmptyString]


AwsLambdaLayerVersionNumber = int


class AwsLambdaLayerVersionDetails(ASFFBaseModel):
    version: Optional[AwsLambdaLayerVersionNumber]
    compatible_runtimes: Optional[NonEmptyStringList]
    created_date: Optional[NonEmptyString]


class AwsRdsDbInstanceAssociatedRole(ASFFBaseModel):
    role_arn: Optional[NonEmptyString]
    feature_name: Optional[NonEmptyString]
    status: Optional[NonEmptyString]


AwsRdsDbInstanceAssociatedRoles = List[AwsRdsDbInstanceAssociatedRole]


class AwsRdsDbInstanceEndpoint(ASFFBaseModel):
    address: Optional[NonEmptyString]
    port: Optional[Integer]
    hosted_zone_id: Optional[NonEmptyString]


class AwsRdsDbInstanceVpcSecurityGroup(ASFFBaseModel):
    vpc_security_group_id: Optional[NonEmptyString]
    status: Optional[NonEmptyString]


AwsRdsDbInstanceVpcSecurityGroups = List[AwsRdsDbInstanceVpcSecurityGroup]


class AwsRdsDbParameterGroup(ASFFBaseModel):
    db_parameter_group_name: Optional[NonEmptyString]
    parameter_apply_status: Optional[NonEmptyString]


AwsRdsDbParameterGroups = List[AwsRdsDbParameterGroup]


class AwsRdsDbSubnetGroupSubnetAvailabilityZone(ASFFBaseModel):
    name: Optional[NonEmptyString]


class AwsRdsDbSubnetGroupSubnet(ASFFBaseModel):
    subnet_identifier: Optional[NonEmptyString]
    subnet_availability_zone: Optional[AwsRdsDbSubnetGroupSubnetAvailabilityZone]
    subnet_status: Optional[NonEmptyString]


AwsRdsDbSubnetGroupSubnets = List[AwsRdsDbSubnetGroupSubnet]


class AwsRdsDbSubnetGroup(ASFFBaseModel):
    db_subnet_group_name: Optional[NonEmptyString]
    db_subnet_group_description: Optional[NonEmptyString]
    vpc_id: Optional[NonEmptyString]
    subnet_group_status: Optional[NonEmptyString]
    subnets: Optional[AwsRdsDbSubnetGroupSubnets]
    db_subnet_group_arn: Optional[NonEmptyString]


class AwsRdsPendingCloudWatchLogsExports(ASFFBaseModel):
    log_types_to_enable: Optional[StringList]
    log_types_to_disable: Optional[StringList]


class AwsRdsDbProcessorFeature(ASFFBaseModel):
    name: Optional[NonEmptyString]
    value: Optional[NonEmptyString]


AwsRdsDbProcessorFeatures = List[AwsRdsDbProcessorFeature]


class AwsRdsDbPendingModifiedValues(ASFFBaseModel):
    db_instance_class: Optional[NonEmptyString]
    allocated_storage: Optional[Integer]
    master_user_password: Optional[NonEmptyString]
    port: Optional[Integer]
    backup_retention_period: Optional[Integer]
    multi_az: Optional[Boolean]
    engine_version: Optional[NonEmptyString]
    license_model: Optional[NonEmptyString]
    iops: Optional[Integer]
    db_instance_identifier: Optional[NonEmptyString]
    storage_type: Optional[NonEmptyString]
    ca_certificate_identifier: Optional[NonEmptyString]
    db_subnet_group_name: Optional[NonEmptyString]
    pending_cloud_watch_logs_exports: Optional[AwsRdsPendingCloudWatchLogsExports]
    processor_features: Optional[AwsRdsDbProcessorFeatures]


class AwsRdsDbOptionGroupMembership(ASFFBaseModel):
    option_group_name: Optional[NonEmptyString]
    status: Optional[NonEmptyString]


AwsRdsDbOptionGroupMemberships = List[AwsRdsDbOptionGroupMembership]


class AwsRdsDbStatusInfo(ASFFBaseModel):
    status_type: Optional[NonEmptyString]
    normal: Optional[Boolean]
    status: Optional[NonEmptyString]
    message: Optional[NonEmptyString]


AwsRdsDbStatusInfos = List[AwsRdsDbStatusInfo]


class AwsRdsDbDomainMembership(ASFFBaseModel):
    domain: Optional[NonEmptyString]
    status: Optional[NonEmptyString]
    fqdn: Optional[NonEmptyString]
    iam_role_name: Optional[NonEmptyString]


AwsRdsDbDomainMemberships = List[AwsRdsDbDomainMembership]


class AwsRdsDbInstanceDetails(ASFFBaseModel):
    associated_roles: Optional[AwsRdsDbInstanceAssociatedRoles]
    ca_certificate_identifier: Optional[NonEmptyString]
    db_cluster_identifier: Optional[NonEmptyString]
    db_instance_identifier: Optional[NonEmptyString]
    db_instance_class: Optional[NonEmptyString]
    db_instance_port: Optional[Integer]
    dbi_resource_id: Optional[NonEmptyString]
    db_name: Optional[NonEmptyString]
    deletion_protection: Optional[Boolean]
    endpoint: Optional[AwsRdsDbInstanceEndpoint]
    engine: Optional[NonEmptyString]
    engine_version: Optional[NonEmptyString]
    iam_database_authentication_enabled: Optional[Boolean]
    instance_create_time: Optional[NonEmptyString]
    kms_key_id: Optional[NonEmptyString]
    publicly_accessible: Optional[Boolean]
    storage_encrypted: Optional[Boolean]
    tde_credential_arn: Optional[NonEmptyString]
    vpc_security_groups: Optional[AwsRdsDbInstanceVpcSecurityGroups]
    multi_az: Optional[Boolean]
    enhanced_monitoring_resource_arn: Optional[NonEmptyString]
    db_instance_status: Optional[NonEmptyString]
    master_username: Optional[NonEmptyString]
    allocated_storage: Optional[Integer]
    preferred_backup_window: Optional[NonEmptyString]
    backup_retention_period: Optional[Integer]
    db_security_groups: Optional[StringList]
    db_parameter_groups: Optional[AwsRdsDbParameterGroups]
    availability_zone: Optional[NonEmptyString]
    db_subnet_group: Optional[AwsRdsDbSubnetGroup]
    preferred_maintenance_window: Optional[NonEmptyString]
    pending_modified_values: Optional[AwsRdsDbPendingModifiedValues]
    latest_restorable_time: Optional[NonEmptyString]
    auto_minor_version_upgrade: Optional[Boolean]
    read_replica_source_db_instance_identifier: Optional[NonEmptyString]
    read_replica_db_instance_identifiers: Optional[StringList]
    read_replica_db_cluster_identifiers: Optional[StringList]
    license_model: Optional[NonEmptyString]
    iops: Optional[Integer]
    option_group_memberships: Optional[AwsRdsDbOptionGroupMemberships]
    character_set_name: Optional[NonEmptyString]
    secondary_availability_zone: Optional[NonEmptyString]
    status_infos: Optional[AwsRdsDbStatusInfos]
    storage_type: Optional[NonEmptyString]
    domain_memberships: Optional[AwsRdsDbDomainMemberships]
    copy_tags_to_snapshot: Optional[Boolean]
    monitoring_interval: Optional[Integer]
    monitoring_role_arn: Optional[NonEmptyString]
    promotion_tier: Optional[Integer]
    timezone: Optional[NonEmptyString]
    performance_insights_enabled: Optional[Boolean]
    performance_insights_kms_key_id: Optional[NonEmptyString]
    performance_insights_retention_period: Optional[Integer]
    enabled_cloud_watch_logs_exports: Optional[StringList]
    processor_features: Optional[AwsRdsDbProcessorFeatures]
    listener_endpoint: Optional[AwsRdsDbInstanceEndpoint]
    max_allocated_storage: Optional[Integer]


class AwsSnsTopicSubscription(ASFFBaseModel):
    endpoint: Optional[NonEmptyString]
    protocol: Optional[NonEmptyString]


AwsSnsTopicSubscriptionList = List[AwsSnsTopicSubscription]


class AwsSnsTopicDetails(ASFFBaseModel):
    kms_master_key_id: Optional[NonEmptyString]
    subscription: Optional[AwsSnsTopicSubscriptionList]
    topic_name: Optional[NonEmptyString]
    owner: Optional[NonEmptyString]


class AwsSqsQueueDetails(ASFFBaseModel):
    kms_data_key_reuse_period_seconds: Optional[Integer]
    kms_master_key_id: Optional[NonEmptyString]
    queue_name: Optional[NonEmptyString]
    dead_letter_target_arn: Optional[NonEmptyString]


class WafAction(ASFFBaseModel):
    type: Optional[NonEmptyString]


class WafExcludedRule(ASFFBaseModel):
    rule_id: Optional[NonEmptyString]


WafExcludedRuleList = List[WafExcludedRule]


class WafOverrideAction(ASFFBaseModel):
    type: Optional[NonEmptyString]


class AwsWafWebAclRule(ASFFBaseModel):
    action: Optional[WafAction]
    excluded_rules: Optional[WafExcludedRuleList]
    override_action: Optional[WafOverrideAction]
    priority: Optional[Integer]
    rule_id: Optional[NonEmptyString]
    type: Optional[NonEmptyString]


AwsWafWebAclRuleList = List[AwsWafWebAclRule]


class AwsWafWebAclDetails(ASFFBaseModel):
    name: Optional[NonEmptyString]
    default_action: Optional[NonEmptyString]
    rules: Optional[AwsWafWebAclRuleList]
    web_acl_id: Optional[NonEmptyString]


class AwsRdsDbSnapshotDetails(ASFFBaseModel):
    db_snapshot_identifier: Optional[NonEmptyString]
    db_instance_identifier: Optional[NonEmptyString]
    snapshot_create_time: Optional[NonEmptyString]
    engine: Optional[NonEmptyString]
    allocated_storage: Optional[Integer]
    status: Optional[NonEmptyString]
    port: Optional[Integer]
    availability_zone: Optional[NonEmptyString]
    vpc_id: Optional[NonEmptyString]
    instance_create_time: Optional[NonEmptyString]
    master_username: Optional[NonEmptyString]
    engine_version: Optional[NonEmptyString]
    license_model: Optional[NonEmptyString]
    snapshot_type: Optional[NonEmptyString]
    iops: Optional[Integer]
    option_group_name: Optional[NonEmptyString]
    percent_progress: Optional[Integer]
    source_region: Optional[NonEmptyString]
    source_db_snapshot_identifier: Optional[NonEmptyString]
    storage_type: Optional[NonEmptyString]
    tde_credential_arn: Optional[NonEmptyString]
    encrypted: Optional[Boolean]
    kms_key_id: Optional[NonEmptyString]
    timezone: Optional[NonEmptyString]
    iam_database_authentication_enabled: Optional[Boolean]
    processor_features: Optional[AwsRdsDbProcessorFeatures]
    dbi_resource_id: Optional[NonEmptyString]


class AwsRdsDbClusterSnapshotDetails(ASFFBaseModel):
    availability_zones: Optional[StringList]
    snapshot_create_time: Optional[NonEmptyString]
    engine: Optional[NonEmptyString]
    allocated_storage: Optional[Integer]
    status: Optional[NonEmptyString]
    port: Optional[Integer]
    vpc_id: Optional[NonEmptyString]
    cluster_create_time: Optional[NonEmptyString]
    master_username: Optional[NonEmptyString]
    engine_version: Optional[NonEmptyString]
    license_model: Optional[NonEmptyString]
    snapshot_type: Optional[NonEmptyString]
    percent_progress: Optional[Integer]
    storage_encrypted: Optional[Boolean]
    kms_key_id: Optional[NonEmptyString]
    db_cluster_identifier: Optional[NonEmptyString]
    db_cluster_snapshot_identifier: Optional[NonEmptyString]
    iam_database_authentication_enabled: Optional[Boolean]


class AwsRdsDbClusterAssociatedRole(ASFFBaseModel):
    role_arn: Optional[NonEmptyString]
    status: Optional[NonEmptyString]


AwsRdsDbClusterAssociatedRoles = List[AwsRdsDbClusterAssociatedRole]


class AwsRdsDbClusterOptionGroupMembership(ASFFBaseModel):
    db_cluster_option_group_name: Optional[NonEmptyString]
    status: Optional[NonEmptyString]


AwsRdsDbClusterOptionGroupMemberships = List[AwsRdsDbClusterOptionGroupMembership]


class AwsRdsDbClusterMember(ASFFBaseModel):
    is_cluster_writer: Optional[Boolean]
    promotion_tier: Optional[Integer]
    db_instance_identifier: Optional[NonEmptyString]
    db_cluster_parameter_group_status: Optional[NonEmptyString]


AwsRdsDbClusterMembers = List[AwsRdsDbClusterMember]


class AwsRdsDbClusterDetails(ASFFBaseModel):
    allocated_storage: Optional[Integer]
    availability_zones: Optional[StringList]
    backup_retention_period: Optional[Integer]
    database_name: Optional[NonEmptyString]
    status: Optional[NonEmptyString]
    endpoint: Optional[NonEmptyString]
    reader_endpoint: Optional[NonEmptyString]
    custom_endpoints: Optional[StringList]
    multi_az: Optional[Boolean]
    engine: Optional[NonEmptyString]
    engine_version: Optional[NonEmptyString]
    port: Optional[Integer]
    master_username: Optional[NonEmptyString]
    preferred_backup_window: Optional[NonEmptyString]
    preferred_maintenance_window: Optional[NonEmptyString]
    read_replica_identifiers: Optional[StringList]
    vpc_security_groups: Optional[AwsRdsDbInstanceVpcSecurityGroups]
    hosted_zone_id: Optional[NonEmptyString]
    storage_encrypted: Optional[Boolean]
    kms_key_id: Optional[NonEmptyString]
    db_cluster_resource_id: Optional[NonEmptyString]
    associated_roles: Optional[AwsRdsDbClusterAssociatedRoles]
    cluster_create_time: Optional[NonEmptyString]
    enabled_cloud_watch_logs_exports: Optional[StringList]
    engine_mode: Optional[NonEmptyString]
    deletion_protection: Optional[Boolean]
    http_endpoint_enabled: Optional[Boolean]
    activity_stream_status: Optional[NonEmptyString]
    copy_tags_to_snapshot: Optional[Boolean]
    cross_account_clone: Optional[Boolean]
    domain_memberships: Optional[AwsRdsDbDomainMemberships]
    db_cluster_parameter_group: Optional[NonEmptyString]
    db_subnet_group: Optional[NonEmptyString]
    db_cluster_option_group_memberships: Optional[AwsRdsDbClusterOptionGroupMemberships]
    db_cluster_identifier: Optional[NonEmptyString]
    db_cluster_members: Optional[AwsRdsDbClusterMembers]
    iam_database_authentication_enabled: Optional[Boolean]


class ContainerDetails(ASFFBaseModel):
    name: Optional[NonEmptyString]
    image_id: Optional[NonEmptyString]
    image_name: Optional[NonEmptyString]
    launched_at: Optional[NonEmptyString]


class ResourceDetails(ASFFBaseModel):
    aws_auto_scaling_auto_scaling_group: Optional[AwsAutoScalingAutoScalingGroupDetails]
    aws_code_build_project: Optional[AwsCodeBuildProjectDetails]
    aws_cloud_front_distribution: Optional[AwsCloudFrontDistributionDetails]
    aws_ec2_instance: Optional[AwsEc2InstanceDetails]
    aws_ec2_network_interface: Optional[AwsEc2NetworkInterfaceDetails]
    aws_ec2_security_group: Optional[AwsEc2SecurityGroupDetails]
    aws_ec2_volume: Optional[AwsEc2VolumeDetails]
    aws_ec2_vpc: Optional[AwsEc2VpcDetails]
    aws_ec2_eip: Optional[AwsEc2EipDetails]
    aws_elbv2_load_balancer: Optional[AwsElbv2LoadBalancerDetails]
    aws_elasticsearch_domain: Optional[AwsElasticsearchDomainDetails]
    aws_s3_bucket: Optional[AwsS3BucketDetails]
    aws_s3_object: Optional[AwsS3ObjectDetails]
    aws_secrets_manager_secret: Optional[AwsSecretsManagerSecretDetails]
    aws_iam_access_key: Optional[AwsIamAccessKeyDetails]
    aws_iam_user: Optional[AwsIamUserDetails]
    aws_iam_policy: Optional[AwsIamPolicyDetails]
    aws_dynamo_db_table: Optional[AwsDynamoDbTableDetails]
    aws_iam_role: Optional[AwsIamRoleDetails]
    aws_kms_key: Optional[AwsKmsKeyDetails]
    aws_lambda_function: Optional[AwsLambdaFunctionDetails]
    aws_lambda_layer_version: Optional[AwsLambdaLayerVersionDetails]
    aws_rds_db_instance: Optional[AwsRdsDbInstanceDetails]
    aws_sns_topic: Optional[AwsSnsTopicDetails]
    aws_sqs_queue: Optional[AwsSqsQueueDetails]
    aws_waf_web_acl: Optional[AwsWafWebAclDetails]
    aws_rds_db_snapshot: Optional[AwsRdsDbSnapshotDetails]
    aws_rds_db_cluster_snapshot: Optional[AwsRdsDbClusterSnapshotDetails]
    aws_rds_db_cluster: Optional[AwsRdsDbClusterDetails]
    container: Optional[ContainerDetails]
    other: Optional[FieldMap]


class Resource(ASFFBaseModel):
    type: NonEmptyString
    id: NonEmptyString
    partition: Optional[Partition]
    region: Optional[NonEmptyString]
    tags: Optional[FieldMap]
    details: Optional[ResourceDetails]


ResourceList = List[Resource]
ComplianceStatus = constr(regex="^(PASSED|WARNING|FAILED|NOT_AVAILABLE)$")
RelatedRequirementsList = List[NonEmptyString]


class StatusReason(ASFFBaseModel):
    reason_code: NonEmptyString
    description: Optional[NonEmptyString]


StatusReasonsList = List[StatusReason]


class Compliance(ASFFBaseModel):
    status: Optional[ComplianceStatus]
    related_requirements: Optional[RelatedRequirementsList]
    status_reasons: Optional[StatusReasonsList]


VerificationState = constr(
    regex="^(UNKNOWN|TRUE_POSITIVE|FALSE_POSITIVE|BENIGN_POSITIVE)$"
)
WorkflowState = constr(regex="^(NEW|ASSIGNED|IN_PROGRESS|DEFERRED|RESOLVED)$")
WorkflowStatus = constr(regex="^(NEW|NOTIFIED|RESOLVED|SUPPRESSED)$")


class Workflow(ASFFBaseModel):
    status: Optional[WorkflowStatus]


RecordState = constr(regex="^(ACTIVE|ARCHIVED)$")


class RelatedFinding(ASFFBaseModel):
    product_arn: NonEmptyString
    id: NonEmptyString


RelatedFindingList = List[RelatedFinding]


class Note(ASFFBaseModel):
    text: NonEmptyString
    updated_by: NonEmptyString
    updated_at: NonEmptyString


class SoftwarePackage(ASFFBaseModel):
    name: Optional[NonEmptyString]
    version: Optional[NonEmptyString]
    epoch: Optional[NonEmptyString]
    release: Optional[NonEmptyString]
    architecture: Optional[NonEmptyString]


SoftwarePackageList = List[SoftwarePackage]


class Cvss(ASFFBaseModel):
    version: Optional[NonEmptyString]
    base_score: Optional[Double]
    base_vector: Optional[NonEmptyString]


CvssList = List[Cvss]


class VulnerabilityVendor(ASFFBaseModel):
    name: NonEmptyString
    url: Optional[NonEmptyString]
    vendor_severity: Optional[NonEmptyString]
    vendor_created_at: Optional[NonEmptyString]
    vendor_updated_at: Optional[NonEmptyString]


class Vulnerability(ASFFBaseModel):
    id: NonEmptyString
    vulnerable_packages: Optional[SoftwarePackageList]
    cvss: Optional[CvssList]
    related_vulnerabilities: Optional[StringList]
    vendor: Optional[VulnerabilityVendor]
    reference_urls: Optional[StringList]


VulnerabilityList = List[Vulnerability]


class PatchSummary(ASFFBaseModel):
    id: NonEmptyString
    installed_count: Optional[Integer]
    missing_count: Optional[Integer]
    failed_count: Optional[Integer]
    installed_other_count: Optional[Integer]
    installed_rejected_count: Optional[Integer]
    installed_pending_reboot: Optional[Integer]
    operation_start_time: Optional[NonEmptyString]
    operation_end_time: Optional[NonEmptyString]
    reboot_option: Optional[NonEmptyString]
    operation: Optional[NonEmptyString]


class AwsSecurityFinding(ASFFBaseModel):
    schema_version: NonEmptyString
    id: NonEmptyString
    product_arn: NonEmptyString
    generator_id: NonEmptyString
    aws_account_id: NonEmptyString
    types: TypeList
    first_observed_at: Optional[NonEmptyString]
    last_observed_at: Optional[NonEmptyString]
    created_at: NonEmptyString
    updated_at: NonEmptyString
    severity: Severity
    confidence: Optional[Integer]
    criticality: Optional[Integer]
    title: NonEmptyString
    description: NonEmptyString
    remediation: Optional[Remediation]
    source_url: Optional[NonEmptyString]
    product_fields: Optional[FieldMap]
    user_defined_fields: Optional[FieldMap]
    malware: Optional[MalwareList]
    network: Optional[Network]
    network_path: Optional[NetworkPathList]
    process: Optional[ProcessDetails]
    threat_intel_indicators: Optional[ThreatIntelIndicatorList]
    resources: ResourceList
    compliance: Optional[Compliance]
    verification_state: Optional[VerificationState]
    workflow_state: Optional[WorkflowState]
    workflow: Optional[Workflow]
    record_state: Optional[RecordState]
    related_findings: Optional[RelatedFindingList]
    note: Optional[Note]
    vulnerabilities: Optional[VulnerabilityList]
    patch_summary: Optional[PatchSummary]
